# Path to your oh-my-zsh installation.
export ZSH=/Users/dodebrecht/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="sporty_256"
#autoload -U promptinit; promptinit
#prompt lambda-pure
#PURE_GIT_PULL=0
#PURE_NODE_ENABLED=0
#ZSH_THEME="lambda-pure"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git 
  colorize 
  github
  virtualenv 
  pip 
  python 
  brew 
  macos 
  postgres
  vscode 
  z
)

# User configuration
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
#alias dm=eval $(docker-machine env)

#chuck_cow
alias gpg="gpg --keyid-format 0xLONG"
alias gpg2="gpg2 --keyid-format 0xLONG"

alias hg="history | grep"
alias grmb='git branch --merged | grep -v "\*" | grep -v "main"  | grep -v "master" | grep -v "develop" | xargs -n 1 git branch -d'

bindkey "^[^[[D" backward-word
bindkey "^[^[[C" forward-word

export PATH="$PATH:/Users/dodebrecht/.cargo/bin/"

# Function for setting all Tokens needed for development
function setTokens {
  tokenNames=( pmaRead pdrRead pdrWrite pdrDelete payment-channels-read pccAll pracRead translationsRead payment-control-read payment-control-write payment-downtimes-read retailer-config-read nakadi-read default )
  OAUTH2_ACCESS_TOKENS=""
  zTOKEN=`zign token -n test`
  echo -e "Setting token \033[32m$zTOKEN\033[0m"
  for i in "${tokenNames[@]}"
  do
    if [ -z "$OAUTH2_ACCESS_TOKENS" ];
    then
      # first run -> only add new token
      OAUTH2_ACCESS_TOKENS="$i=$zTOKEN"
    else
      # append new token to string
      OAUTH2_ACCESS_TOKENS="$OAUTH2_ACCESS_TOKENS,$i=$zTOKEN"
    fi
    echo -e "\t\033[1m\033[32m✔︎\033[0m \033[90m$i\033[0m"
  done
  export OAUTH2_ACCESS_TOKENS
  echo -e "All done"
}

#export PAYMENT_CONTROL_URL="http://restsn03.zalando:37600/api"
#export CUSTOMER_WEBSERVICE_URL="http://restsn03.zalando:39600/ws/customerService"

#export JAVA_HOME="/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home"
export PATH=$JAVA_HOME/bin:$PATH

#alias j11="export PATH=$JAVA_HOME/bin:$PATH"

psql_helper_live() {
        PGPASSWORD=$(ztoken) psql -h $1-db.schotter.payments-core.zalan.do -d $1_db -U $(whoami)
}
alias zpsqllive="psql_helper_live"

# forcing the jdk8 keg from brew
#export PATH="/usr/local/opt/openjdk@8/bin:$PATH"

#export PYENV_ROOT="$HOME/.pyenv"
#[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
#eval "$(pyenv init -)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
